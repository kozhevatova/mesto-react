{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupImage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","newName","newInfo","method","body","JSON","stringify","name","about","link","cardId","avatar","authorization","Card","card","onCardClick","alt","src","onClick","type","aria-label","likes","length","Main","props","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","userData","initialCards","catch","err","console","log","style","background","onEditAvatar","onEditProfile","onAddPlace","map","_id","Footer","id","Date","getFullYear","PopupWithForm","isOpen","onClose","title","children","buttonTitle","PopupImage","App","isEditProfileFormOpen","setIsEditProfileFormOpen","isAddPlaceFormOpen","setIsAddPlaceFormOpen","isEditAvatarFormOpen","setIsEditAvatarFormOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f64034.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    );\n}\n\nexport default Header;","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editUserInfo(newName, newInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: newName,\n        about: newInfo\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'PUT',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n  headers: {\n    authorization: 'b1b736c3-ab37-40d8-99c3-eedcbb719e9d',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","const Card = ({ card, onCardClick }) => {\n    const handleClick = () => {\n        onCardClick(card);\n    }\n    return (\n        <>\n            <img alt={card.name} className=\"element__image\" src={card.link} onClick={handleClick} />\n            <div className=\"element__title\">\n                <h2 className=\"element__place-name\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className=\"element__like\" type=\"button\" aria-label=\"Поставить лайк.\"></button>\n                    <p className=\"element__like-num\">{card.likes.length}</p>\n                </div>\n            </div>\n            <button className=\"element__delete-button\" type=\"button\" aria-label=\"Удалить фото.\"></button>\n        </>\n    );\n}\n\nexport default Card;","import { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nconst Main = (props) => {\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const [userAvatar, setUserAvatar] = useState(null);\n\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userData, initialCards] = values;\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n        setCards(initialCards);\n      }).catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\" style={{ background: `center/cover url(${userAvatar}) no-repeat` }}>\n          <button className=\"profile__edit-avatar-button\"\n            onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              aria-label=\"Редактировать профиль.\" onClick={props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          aria-label=\"Добавить фотографию.\" onClick={props.onAddPlace}></button>\n      </section>\n\n      <div>\n        <ul className=\"elements\"> {\n          cards.map((card) => {\n            return (\n              <li className=\"element\" key={card._id}>\n                <Card card={card} onCardClick={props.onCardClick} />\n              </li>\n            );\n          })\n        }\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; <span id=\"year\">{new Date().getFullYear()}</span> Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","const PopupWithForm = (props) => {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n      <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={props.name}>\n        <button className=\"popup__close-button\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className=\"popup__save-button popup__button popup__button_disabled\">{props.buttonTitle}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","const PopupImage = ({ card, onClose }) => {\n  return (\n    <div className={`popup popup_type_zoomed-image ${(card && 'popup_opened')}`}>\n      <div className=\"popup__form popup__form_type_zoomed-image\">\n        <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\" />\n        <p className=\"popup__name popup__name_place_zoomed-image\">{card ? card.name : ''}</p>\n        <button className=\"popup__close-button\" type=\"reset\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupImage;","import React, { useState } from 'react';\nimport '../App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport PopupImage from './PopupImage';\n\nfunction App() {\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page__container\">\n      <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" buttonTitle=\"Сохранить\"\n        isOpen={isEditProfileFormOpen} onClose={closeAllPopups}>\n        <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n          placeholder=\"Имя\" required id=\"name-input\" minLength=\"2\" maxLength=\"40\" />\n        <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n        <input type=\"text\" className=\"popup__input popup__description\" name=\"popupDescription\"\n          placeholder=\"О себе\" required id=\"description-input\" minLength=\"2\" maxLength=\"200\" />\n        <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name=\"add-form\" title=\"Новое место\" buttonTitle=\"Создать\"\n        isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}>\n        <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n          placeholder=\"Название\" required id=\"title-input\" minLength=\"2\" maxLength=\"30\" />\n        <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n        <input type=\"url\" className=\"popup__input popup__description\" name=\"popupDescription\"\n          placeholder=\"Ссылка на картинку\" required id=\"url-input\" />\n        <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm name=\"delete-confirm\" title=\"Вы уверены?\" buttonTitle=\"Да\"\n        isOpen={false} onClose={closeAllPopups} />\n\n      <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle=\"Сохранить\"\n        isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}>\n        <input type=\"url\" className=\"popup__input popup__description\" name=\"avatarUrl\"\n          placeholder=\"Ссылка на аватар\" required id=\"url-input\" />\n        <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupImage card={selectedCard} onClose={closeAllPopups} />\n\n      <Header />\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}