{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/FormValidator.js","utils/constants.js","components/PopupWithForm.js","utils/utils.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","alt","name","src","link","onClick","type","aria-label","length","Spinner","Main","cards","onEditProfile","onAddPlace","onEditAvatar","isLoading","style","background","avatar","about","map","Footer","id","Date","getFullYear","ImagePopup","onClose","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","newName","newInfo","method","body","JSON","stringify","cardId","_addLike","_deleteLike","authorization","FormValidator","data","formElement","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_errorSelector","errorSelector","_formElement","_button","querySelector","_inputList","Array","from","querySelectorAll","input","errorMessage","error","classList","add","textContent","remove","validity","valid","_hideInputError","_showInputError","validationMessage","removeAttribute","setAttribute","_hasInvalidInput","_disableButton","_enableButton","forEach","addEventListener","_handleReset","_checkInputValidity","toggleButtonState","_setEventListenersForReset","popupName","popupDescription","validationConfig","PopupWithForm","props","formRef","useRef","useEffect","form","formValidator","enableValidation","validateForm","current","isOpen","onSubmit","ref","title","children","disabled","buttonTitle","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleInputChange","e","target","value","console","log","preventDefault","placeholder","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","AddPlacePopup","setLink","ConfirmDeletePopup","App","setCurrentUser","setCards","selectedCard","setSelectedCard","setIsLoading","cardToDelete","setCardToDelete","isEditProfileFormOpen","setIsEditProfileFormOpen","isAddPlaceFormOpen","setIsAddPlaceFormOpen","isEditAvatarFormOpen","setIsEditAvatarFormOpen","isConfirmDeleteFormOpen","setIsConfirmDeleteFormOpen","all","getUserInfo","getInitialCards","values","userInfo","initialCards","catch","err","finally","handleEscClose","event","key","closeAllPopups","handleCLosePopupByClickOnOverlay","currentTarget","setEscListener","document","removeEventListener","Provider","changeLikeCardStatus","newCard","newCards","c","newPlace","addNewCard","deleteCard","filter","newAvatar","editAvatar","info","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7462542.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({ card, onCardClick, onCardLike, onCardDelete }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    //определение является ли текущий пользователь владельцем карточки\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ?\n            'element__delete-button_visible' :\n            'element__delete-button_hidden'}`\n    );\n\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked ?\n            'element__like_active' :\n            'element__like_inactive'}`\n    );\n\n    const handleClick = () => {\n        onCardClick(card);\n    }\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    }\n\n    return (\n        <li className=\"element\">\n            <img alt={card.name} className=\"element__image\" src={card.link} onClick={handleClick} />\n            <div className=\"element__title\">\n                <h2 className=\"element__place-name\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк.\"\n                        onClick={handleLikeClick}></button>\n                    <p className=\"element__like-num\">{card.likes.length}</p>\n                </div>\n            </div>\n\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить фото.\"\n                onClick={handleDeleteClick}></button>\n        </li>\n    );\n}\n\nexport default Card;","const Spinner = () => {\n  return <div className=\"spinner\" />;\n}\n\nexport default Spinner;","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Card from './Card';\nimport Spinner from './Spinner';\n\nconst Main = ({ cards, onEditProfile, onAddPlace, onEditAvatar,\n  onCardClick, onCardLike, onCardDelete, isLoading }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\"> \n      <section className=\"profile\">\n        <div className=\"profile__avatar\" style={{ background: `center/cover url(${currentUser.avatar}) no-repeat` }}>\n          <button className=\"profile__edit-avatar-button\"\n            onClick={onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              aria-label=\"Редактировать профиль.\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          aria-label=\"Добавить фотографию.\" onClick={onAddPlace}></button>\n      </section>\n\n      <div>\n        <ul className=\"elements\"> {\n          isLoading ? (\n            <Spinner />\n          ) : (\n              cards.map((card) => {\n                return (\n                    <Card card={card} key={card._id} onCardClick={onCardClick} onCardLike={onCardLike}\n                      onCardDelete={onCardDelete} />\n                );\n              })\n            )\n        }\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; <span id=\"year\">{new Date().getFullYear()}</span> Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","const ImagePopup = ({ card, onClose, onClick }) => {\n  return (\n    <div className={`popup popup_type_zoomed-image ${(card && 'popup_opened')}`} onClick={onClick}>\n      <div className=\"popup__form popup__form_type_zoomed-image\">\n        <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\" />\n        <p className=\"popup__name popup__name_place_zoomed-image\">{card ? card.name : ''}</p>\n        <button className=\"popup__close-button\" type=\"reset\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  setUserInfo(newName, newInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: newName,\n        about: newInfo\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'PUT',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this._addLike(cardId) : this._deleteLike(cardId);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n  headers: {\n    authorization: 'b1b736c3-ab37-40d8-99c3-eedcbb719e9d',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","class FormValidator {\n  constructor(data, formElement) {\n    this._inputSelector = data.inputSelector;\n    this._submitButtonSelector = data.submitButtonSelector;\n    this._inactiveButtonClass = data.inactiveButtonClass;\n    this._inputErrorClass = data.inputErrorClass;\n    this._errorClass = data.errorClass;\n    this._errorSelector = data.errorSelector;\n    this._formElement = formElement;\n    this._button = formElement.querySelector(data.submitButtonSelector);\n    this._inputList = Array.from(formElement.querySelectorAll(data.inputSelector));\n  }\n\n  // отображение ошибки ввода\n  _showInputError(input, errorMessage) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.add(this._inputErrorClass);\n    error.textContent = errorMessage;\n    error.classList.add(this._errorClass);\n  }\n\n  // удаление ошибки ввода\n  _hideInputError(input) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.remove(this._inputErrorClass);\n    error.textContent = '';\n    error.classList.remove(this._errorClass);\n  }\n\n  // проверка валидности ввода\n  _checkInputValidity(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  // сделать кнопку активной\n  _enableButton() {\n    this._button.classList.remove(this._inactiveButtonClass);\n    this._button.removeAttribute('disabled');\n  }\n\n  // сделать кнопку неактивной\n  _disableButton() {\n    this._button.classList.add(this._inactiveButtonClass);\n    this._button.setAttribute('disabled', 'true');\n  }\n\n  // проверка наличия хотя бы одного неверного ввода\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  // изменение активности submit кнопки\n  toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._disableButton();\n    } else {\n      this._enableButton();\n    }\n  }\n\n  // удаление ошибки ввода при закрытии формы\n  _handleReset() {\n    this._inputList.forEach((input) => {\n      this._hideInputError(input);\n    });\n  }\n\n  _setEventListenersForReset() {\n    this._formElement.addEventListener('reset', () => {\n      this._handleReset();\n    });\n  }\n\n  // настройка валидации\n  enableValidation() {\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInputValidity(input);\n        this.toggleButtonState();\n      });\n    });\n\n    this._setEventListenersForReset();\n  }\n}\n\nexport default FormValidator;\n","const popupName = 'popupName';\nconst popupDescription = 'popupDescription';\n\nconst validationConfig = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active',\n  errorSelector: '.popup__input-error',\n};\n\nexport { popupDescription, popupName, validationConfig} ;","import { useEffect, useRef } from \"react\";\nimport { validateForm } from '../utils/utils';\n\nconst PopupWithForm = (props) => {\n  const formRef = useRef();\n\n  useEffect(() => {\n    validateForm(formRef.current).enableValidation();\n  }, []);\n\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`} onClick={props.onClick}>\n      <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={props.name}\n        onSubmit={props.onSubmit} ref={formRef} >\n        <button className=\"popup__close-button\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className={`popup__save-button popup__button\n          ${(!(props.name === 'delete-confirm') && props.isOpen) && 'popup__button_disabled'}`}\n          disabled={!(props.name === 'delete-confirm') && props.isOpen}\n        >{props.buttonTitle}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import FormValidator from '../components/FormValidator';\nimport { validationConfig } from './constants';\n\n// включить валидацию формы\nconst validateForm = (form) => {\n  const formValidator = new FormValidator(validationConfig, form);\n  formValidator.enableValidation();\n  return formValidator;\n};\n\nexport { validateForm };","import React, { useContext, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, isLoading, onClick }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  \n  //присвоение полям попапа значений и при открытии попапа, и при изменении данных пользователя\n  useEffect(() => {\n    if (isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setDescription(e.target.value);\n        break;\n      default: \n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API \n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" buttonTitle={isLoading ? 'Сохранение...' : 'Сохранить'}\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} onClick={onClick}>\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Имя\" required id=\"name-input\" minLength=\"2\" maxLength=\"40\"\n        onChange={handleInputChange} value={name} />\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n      <input type=\"text\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"О себе\" required id=\"description-input\" minLength=\"2\" maxLength=\"200\"\n        onChange={handleInputChange} value={description} />\n      <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useEffect, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar, isLoading, onClick}) => {\n  const inputRef = useRef();\n\n  //очистка поля ввода при открытии попапа\n  useEffect(() => {\n    if(isOpen) {\n      inputRef.current.value = '';\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //отправка данных в API\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    })\n  }\n\n  return (\n    <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle={isLoading ? \n      \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} \n      onClick={onClick} >\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"avatarUrl\"\n        placeholder=\"Ссылка на аватар\" required id=\"url-input\" ref={inputRef}/>\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\n\nconst AddPlacePopup = ({ isOpen, onClose, onAddPlace, isLoading, onClick }) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  useEffect(() => {\n    //очистка полей ввода при открытии попапа\n    if (isOpen) {\n      setName('');\n      setLink('');\n    }\n\n  }, [isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setLink(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API\n    onAddPlace({\n      name,\n      link\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"add-form\" title=\"Новое место\" buttonTitle={isLoading ?\n      \"Создание...\" : \"Создать\"} isOpen={isOpen} onClose={onClose} onSubmit={handleAddPlaceSubmit}\n      onClick={onClick} >\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Название\" required id=\"title-input\" minLength=\"2\" maxLength=\"30\"\n        value={name} onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"Ссылка на картинку\" required id=\"url-input\" value={link}\n        onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = ({isOpen, onClose, onCardDelete, isLoading, card, onClick}) => {\n  const handleCardDelete = (e) => {\n    e.preventDefault();\n    onCardDelete(card);\n  }\n  return (\n    <PopupWithForm name=\"delete-confirm\" title=\"Вы уверены?\" buttonTitle={isLoading ?\n    \"Удаление...\" : \"Да\"} isOpen={isOpen} onClose={onClose} onSubmit={handleCardDelete} \n    onClick={onClick} />\n  );\n}\n\nexport default ConfirmDeletePopup;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport validateForm from './FormValidator';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  const [isConfirmDeleteFormOpen, setIsConfirmDeleteFormOpen] = useState(false);\n\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    setIsLoading(true);\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    setIsLoading(true);\n    api.addNewCard(newPlace.name, newPlace.link)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //обработчик закрытия по нажатию Esc\n  const handleEscClose = (event) => {\n    if (event.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  //обработчик закрытия попапов при нажатии по фону\n  const handleCLosePopupByClickOnOverlay = (event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n  \n    closeAllPopups();\n  }\n\n  const setEscListener = () => {\n    document.addEventListener('keydown', handleEscClose);\n  }\n\n  const removeEscListener = () => {\n    document.removeEventListener('keydown', handleEscClose);\n  }\n\n  //обработчик клика по кнопке удаления карточки\n  const handleDeleteButtonClick = (card) => {\n    //открытие попапа подтверждения удаления\n    setIsConfirmDeleteFormOpen(true);\n    setCardToDelete(card);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n\n    setEscListener();\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setIsConfirmDeleteFormOpen(false);\n    setSelectedCard(null);\n\n    removeEscListener();\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    setIsLoading(true);\n    api.setUserInfo(info.name, info.about)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    setIsLoading(true);\n    api.editAvatar(newAvatar.avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header />\n        <Main cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n          onCardLike={handleCardLike} onCardDelete={handleDeleteButtonClick} isLoading={isLoading} />\n        <Footer />\n\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ConfirmDeletePopup isOpen={isConfirmDeleteFormOpen} onClose={closeAllPopups}\n          onCardDelete={handleCardDelete} isLoading={isLoading} card={cardToDelete} \n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onClick={handleCLosePopupByClickOnOverlay} />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}