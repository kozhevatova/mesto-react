{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupImage.js","utils/constants.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","newName","newInfo","method","body","JSON","stringify","name","about","link","cardId","isLiked","_addLike","_deleteLike","avatar","authorization","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","alt","src","onClick","type","aria-label","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","style","background","map","Footer","id","Date","getFullYear","PopupWithForm","props","isOpen","onSubmit","onClose","title","children","buttonTitle","PopupImage","popupName","popupDescription","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","handleInputChange","e","target","value","preventDefault","placeholder","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","setLink","App","setCurrentUser","setCards","selectedCard","setSelectedCard","isEditProfileFormOpen","setIsEditProfileFormOpen","isAddPlaceFormOpen","setIsAddPlaceFormOpen","isEditAvatarFormOpen","setIsEditAvatarFormOpen","all","getUserInfo","getInitialCards","values","userInfo","initialCards","catch","err","console","log","closeAllPopups","Provider","newPlace","addNewCard","newAvatar","editAvatar","info","setUserInfo","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37df8668.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  setUserInfo(newName, newInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: newName,\n        about: newInfo\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'PUT',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this._addLike(cardId) : this._deleteLike(cardId);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n  headers: {\n    authorization: 'b1b736c3-ab37-40d8-99c3-eedcbb719e9d',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({ card, onCardClick, onCardLike, onCardDelete }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    //определение является ли текущий пользователь владельцем карточки\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ?\n            'element__delete-button_visible' :\n            'element__delete-button_hidden'}`\n    );\n\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked ?\n            'element__like_active' :\n            'element__like_inactive'}`\n    );\n\n    const handleClick = () => {\n        onCardClick(card);\n    }\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    }\n\n    return (\n        <>\n            <img alt={card.name} className=\"element__image\" src={card.link} onClick={handleClick} />\n            <div className=\"element__title\">\n                <h2 className=\"element__place-name\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк.\"\n                        onClick={handleLikeClick}></button>\n                    <p className=\"element__like-num\">{card.likes.length}</p>\n                </div>\n            </div>\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить фото.\"\n                onClick={handleDeleteClick}></button>\n        </>\n    );\n}\n\nexport default Card;","import { useContext, useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport Card from './Card';\n\nconst Main = ({cards, onEditProfile, onAddPlace, onEditAvatar, \n    onCardClick, onCardLike, onCardDelete}) => {\n  const currentUser = useContext(CurrentUserContext);\n  \n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\" style={{ background: `center/cover url(${currentUser.avatar}) no-repeat` }}>\n          <button className=\"profile__edit-avatar-button\"\n            onClick={onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              aria-label=\"Редактировать профиль.\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          aria-label=\"Добавить фотографию.\" onClick={onAddPlace}></button>\n      </section>\n\n      <div>\n        <ul className=\"elements\"> {\n          cards.map((card) => {\n            return (\n              <li className=\"element\" key={card._id}>\n                <Card card={card} onCardClick={onCardClick} onCardLike={onCardLike} \n                  onCardDelete={onCardDelete}/>\n              </li>\n            );\n          })\n        }\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; <span id=\"year\">{new Date().getFullYear()}</span> Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","const PopupWithForm = (props) => {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n      <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={props.name} onSubmit={props.onSubmit}>\n        <button className=\"popup__close-button\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className=\"popup__save-button popup__button \"\n          >{props.buttonTitle}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","const PopupImage = ({ card, onClose }) => {\n  return (\n    <div className={`popup popup_type_zoomed-image ${(card && 'popup_opened')}`}>\n      <div className=\"popup__form popup__form_type_zoomed-image\">\n        <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\" />\n        <p className=\"popup__name popup__name_place_zoomed-image\">{card ? card.name : ''}</p>\n        <button className=\"popup__close-button\" type=\"reset\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupImage;","const popupName = 'popupName';\nconst popupDescription = 'popupDescription';\n\nexport { popupDescription, popupName} ;","import React, { useContext, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleInputChange = (e) => {\n    switch(e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setDescription(e.target.value);\n        break;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" buttonTitle=\"Сохранить\"\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Имя\" required id=\"name-input\" minLength=\"2\" maxLength=\"40\"\n        onChange={handleInputChange} value={name}/>\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n      <input type=\"text\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"О себе\" required id=\"description-input\" minLength=\"2\" maxLength=\"200\"\n        onChange={handleInputChange} value={description}/>\n      <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar}) => {\n  const inputRef = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    })\n  }\n  return (\n    <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle=\"Сохранить\"\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"avatarUrl\"\n        placeholder=\"Ссылка на аватар\" required id=\"url-input\" ref={inputRef}/>\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\n\nconst AddPlacePopup = ({isOpen, onClose, onAddPlace}) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  const handleInputChange = (e) => {\n    switch(e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setLink(e.target.value);\n        break;\n    }\n  }\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n    onAddPlace({\n      name,\n      link\n    });\n  }\n  return (\n    <PopupWithForm name=\"add-form\" title=\"Новое место\" buttonTitle=\"Создать\"\n      isOpen={isOpen} onClose={onClose} onSubmit={handleAddPlaceSubmit}>\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Название\" required id=\"title-input\" minLength=\"2\" maxLength=\"30\"\n        value={name} onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"Ссылка на картинку\" required id=\"url-input\" value={link} \n        onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React, { useState, useEffect } from 'react';\n// import '../App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport PopupImage from './PopupImage';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    api.addNewCard(newPlace.name, newPlace.link)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    const isOwn = card.owner._id === currentUser._id;\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setSelectedCard(null);\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    api.setUserInfo(info.name, info.about)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    api.editAvatar(newAvatar.avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} />\n\n        <PopupWithForm name=\"delete-confirm\" title=\"Вы уверены?\" buttonTitle=\"Да\"\n          isOpen={false} onClose={closeAllPopups} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n\n        <PopupImage card={selectedCard} onClose={closeAllPopups} />\n\n        <Header />\n        <Main cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n          onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        <Footer />\n\n      </div>\n    </CurrentUserContext.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}