[{"/Users/annakozevatova/dev/mesto-react/src/index.js":"1","/Users/annakozevatova/dev/mesto-react/src/components/AddPlacePopup.js":"2","/Users/annakozevatova/dev/mesto-react/src/components/FormValidator.js":"3","/Users/annakozevatova/dev/mesto-react/src/components/EditAvatarPopup.js":"4","/Users/annakozevatova/dev/mesto-react/src/components/ConfirmDeletePopup.js":"5","/Users/annakozevatova/dev/mesto-react/src/components/Main.js":"6","/Users/annakozevatova/dev/mesto-react/src/reportWebVitals.js":"7","/Users/annakozevatova/dev/mesto-react/src/utils/api.js":"8","/Users/annakozevatova/dev/mesto-react/src/contexts/CurrentUserContext.js":"9","/Users/annakozevatova/dev/mesto-react/src/components/EditProfilePopup.js":"10","/Users/annakozevatova/dev/mesto-react/src/components/Card.js":"11","/Users/annakozevatova/dev/mesto-react/src/components/App.js":"12","/Users/annakozevatova/dev/mesto-react/src/components/PopupWithForm.js":"13","/Users/annakozevatova/dev/mesto-react/src/components/ImagePopup.js":"14","/Users/annakozevatova/dev/mesto-react/src/utils/constants.js":"15","/Users/annakozevatova/dev/mesto-react/src/components/Footer.js":"16","/Users/annakozevatova/dev/mesto-react/src/components/Header.js":"17"},{"size":511,"mtime":1606332803774,"results":"18","hashOfConfig":"19"},{"size":1966,"mtime":1607607706348,"results":"20","hashOfConfig":"19"},{"size":2777,"mtime":1607537378324,"results":"21","hashOfConfig":"19"},{"size":1114,"mtime":1607541898460,"results":"22","hashOfConfig":"19"},{"size":498,"mtime":1607541877210,"results":"23","hashOfConfig":"19"},{"size":1707,"mtime":1607607830980,"results":"24","hashOfConfig":"19"},{"size":362,"mtime":1606168251900,"results":"25","hashOfConfig":"19"},{"size":2282,"mtime":1607537378328,"results":"26","hashOfConfig":"19"},{"size":84,"mtime":1607537378326,"results":"27","hashOfConfig":"19"},{"size":2325,"mtime":1607607656207,"results":"28","hashOfConfig":"19"},{"size":2000,"mtime":1607607877686,"results":"29","hashOfConfig":"19"},{"size":7662,"mtime":1607607439031,"results":"30","hashOfConfig":"19"},{"size":1084,"mtime":1607541821931,"results":"31","hashOfConfig":"19"},{"size":568,"mtime":1607541856521,"results":"32","hashOfConfig":"19"},{"size":419,"mtime":1607537378328,"results":"33","hashOfConfig":"19"},{"size":241,"mtime":1606332803772,"results":"34","hashOfConfig":"19"},{"size":171,"mtime":1606332803772,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ho8wcm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/annakozevatova/dev/mesto-react/src/index.js",[],["76","77"],"/Users/annakozevatova/dev/mesto-react/src/components/AddPlacePopup.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/FormValidator.js",[],["78","79"],"/Users/annakozevatova/dev/mesto-react/src/components/EditAvatarPopup.js",[],["80","81"],"/Users/annakozevatova/dev/mesto-react/src/components/ConfirmDeletePopup.js",[],["82","83"],"/Users/annakozevatova/dev/mesto-react/src/components/Main.js",[],"/Users/annakozevatova/dev/mesto-react/src/reportWebVitals.js",[],"/Users/annakozevatova/dev/mesto-react/src/utils/api.js",[],"/Users/annakozevatova/dev/mesto-react/src/contexts/CurrentUserContext.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/EditProfilePopup.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/Card.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/App.js",["84"],"import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport validateForm from './FormValidator';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  const [isConfirmDeleteFormOpen, setIsConfirmDeleteFormOpen] = useState(false);\n\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    setIsLoading(true);\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    setIsLoading(true);\n    api.addNewCard(newPlace.name, newPlace.link)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //обработчик закрытия по нажатию Esc\n  const handleEscClose = (event) => {\n    if (event.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  //обработчик закрытия попапов при нажатии по фону\n  const handleCLosePopupByClickOnOverlay = (event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n  \n    closeAllPopups();\n  }\n\n  const setEscListener = () => {\n    document.addEventListener('keydown', handleEscClose);\n  }\n\n  const removeEscListener = () => {\n    document.removeEventListener('keydown', handleEscClose);\n  }\n\n  //обработчик клика по кнопке удаления карточки\n  const handleDeleteButtonClick = (card) => {\n    //открытие попапа подтверждения удаления\n    setIsConfirmDeleteFormOpen(true);\n    setCardToDelete(card);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n\n    setEscListener();\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setIsConfirmDeleteFormOpen(false);\n    setSelectedCard(null);\n\n    removeEscListener();\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    setIsLoading(true);\n    api.setUserInfo(info.name, info.about)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    setIsLoading(true);\n    api.editAvatar(newAvatar.avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header />\n        <Main cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n          onCardLike={handleCardLike} onCardDelete={handleDeleteButtonClick} isLoading={isLoading} />\n        <Footer />\n\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ConfirmDeletePopup isOpen={isConfirmDeleteFormOpen} onClose={closeAllPopups}\n          onCardDelete={handleCardDelete} isLoading={isLoading} card={cardToDelete} \n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onClick={handleCLosePopupByClickOnOverlay} />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/annakozevatova/dev/mesto-react/src/components/PopupWithForm.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/ImagePopup.js",[],["85","86"],"/Users/annakozevatova/dev/mesto-react/src/utils/constants.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/Footer.js",[],"/Users/annakozevatova/dev/mesto-react/src/components/Header.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":20},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],["103"],["104"],["103"],["104"],"no-unused-vars","'validateForm' is defined but never used.","Identifier","unusedVar",["103"],["104"],"no-global-assign","no-unsafe-negation"]